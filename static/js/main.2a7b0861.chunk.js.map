{"version":3,"sources":["components/List/index.js","components/App.js","index.js"],"names":["List","checkedItem","checked","listItem","this","props","items","map","item","className","onClick","onItemClick","bind","undefined","id","value","type","onClickCapture","onButtonClick","Component","createLocal","data","JSON","parse","localStorage","getItem","App","state","inputValue","arrayData","addBtnClick","trim","Date","getTime","errorValue","newArray","concat","saveLocalData","rewriteArrayData","cleanInput","Notify","success","failure","findIndex","setState","hendleChange","e","target","removeArrayDataItem","filter","selectItemClick","find","setItem","stringify","onChange","render","document","getElementById"],"mappings":"gPAGqBA,E,4MAEjBC,YAAc,SAACC,GACV,OAAOA,EAAS,mCAAmC,gB,4CAGvD,WAAS,IAAD,OACEC,EAAWC,KAAKC,MAAMC,MAAMC,KAAI,SAAAC,GAAI,OACvC,qBAEIC,UAAWD,EAAKN,QAAS,iCAAiC,aAC1DQ,QAAS,EAAKL,MAAMM,YAAYC,UAAKC,EAAUL,EAAKM,IAHxD,UAKKN,EAAKO,MACN,wBACIC,KAAK,SACLP,UAAU,kBACVQ,eAAgB,EAAKZ,MAAMa,cAAcN,UAAKC,EAAUL,EAAKM,IAHjE,sBALON,EAAKM,OAapB,OACI,oBAAIL,UAAU,OAAd,SACKN,Q,GAxBiBgB,a,MCElC,SAASC,IACL,IAAMC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,cAC7C,OAAOJ,GAAa,G,IAGlBK,E,4MACFC,MAAQ,CACJC,WAAW,GACXC,UAAWT,K,EAGfU,YAAc,WACV,IAAMf,EAAQ,EAAKY,MAAMC,WAAWG,OAC9BvB,EAAM,CACRM,IAAI,IAAIkB,MAAOC,UACflB,MAAOA,EACPb,SAAS,GAGb,IAAG,EAAKgC,WAAWnB,GAAnB,CAEA,IAAMoB,EAAW,EAAKR,MAAME,UAAUO,OAAO5B,GAC7C,EAAK6B,cAAcF,GACnB,EAAKG,iBAAiBH,GACtB,EAAKI,aAELC,SAAOC,QAAQ,8B,EAGnBP,WAAa,SAACnB,GACV,MAAW,KAARA,GACCyB,SAAOE,QAAQ,gBACR,IAE6C,IAArDtB,IAAcuB,WAAU,SAAAnC,GAAI,OAAEA,EAAKO,QAAQA,OAC1CyB,SAAOE,QAAQ,iBACR,I,EAKfH,WAAa,WACT,EAAKK,SAAS,CACVhB,WAAY,M,EAIpBiB,aAAe,SAACC,GACZ,IAAM/B,EAAQ+B,EAAEC,OAAOhC,MACvB,EAAK6B,SAAS,CACNhB,WAAYb,K,EAIxBuB,iBAAmB,SAAChC,GAChB,EAAKsC,SAAS,CACVf,UAAWvB,K,EAInB0C,oBAAsB,SAAClC,GACnB,IAAMqB,EAAWf,IAAc6B,QAAO,SAAAzC,GAAI,OAAEA,EAAKM,KAAKA,KACtD,EAAKuB,cAAcF,GACnB,EAAKG,iBAAiBH,I,EAG1Be,gBAAkB,SAACpC,GACf,IAAMe,EAAYT,IACZZ,EAAOqB,EAAUsB,MAAK,SAAA3C,GAAI,OAAIA,EAAKM,MAAQA,KACjDN,EAAKN,SAAWM,EAAKN,QACrB,EAAKmC,cAAcR,GACnB,EAAKS,iBAAiBT,I,EAG1BQ,cAAgB,SAAC/B,GACbkB,aAAa4B,QAAQ,YAAY9B,KAAK+B,UAAU/C,K,4CAGpD,WACI,OACJ,sBAAKG,UAAU,aAAf,UACI,oBAAIA,UAAU,oBAAd,0BACA,sBAAKA,UAAU,wCAAf,UACI,uBAAOA,UAAU,oBACbM,MAAOX,KAAKuB,MAAMC,WAClB0B,SAAUlD,KAAKyC,eAEnB,wBAAQpC,UAAU,kBACdC,QAASN,KAAK0B,YADlB,yBAKJ,cAAC,EAAD,CACIxB,MAASF,KAAKuB,MAAME,UACpBX,cAAiBd,KAAK4C,oBAAoBpC,KAAKR,MAC/CO,YAAcP,KAAK8C,gBAAgBtC,KAAKR,e,GA1FlCe,aAiGHO,ICrGd6B,iBAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,W","file":"static/js/main.2a7b0861.chunk.js","sourcesContent":["import React,{ Component} from \"react\";\r\nimport './style.css'\r\n\r\nexport default class List extends Component{   \r\n\r\n    checkedItem = (checked)=>{\r\n         return checked? '\"list__item list__item--checked\"':'\"list__item\"';\r\n    }\r\n    \r\n     render(){\r\n         const listItem = this.props.items.map(item => \r\n            <li \r\n                key = {item.id} \r\n                className={item.checked? \"list__item list__item--checked\":\"list__item\"} \r\n                onClick={this.props.onItemClick.bind(undefined,item.id)}\r\n            >       \r\n                {item.value}\r\n                <button \r\n                    type=\"button\"\r\n                    className=\"list__btn-close\"\r\n                    onClickCapture={this.props.onButtonClick.bind(undefined,item.id)}\r\n                >âœ—</button>\r\n            </li>        \r\n        )\r\n\r\n        return(       \r\n            <ul className=\"list\">\r\n                {listItem}\r\n                </ul>        \r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\r\nimport List from \"./List\";\r\nimport \"./style.css\"\r\n\r\nfunction createLocal(){\r\n    const data = JSON.parse(localStorage.getItem('listItems'));\r\n    return data? data : [];\r\n}\r\n\r\nclass App extends Component {\r\n    state = {\r\n        inputValue:'',\r\n        arrayData: createLocal()\r\n    }\r\n\r\n    addBtnClick = ()=>{\r\n        const value = this.state.inputValue.trim();\r\n        const item ={\r\n            id: new Date().getTime(),\r\n            value: value,\r\n            checked: false,\r\n        };\r\n\r\n        if(this.errorValue(value)){ return }\r\n\r\n        const newArray = this.state.arrayData.concat(item);\r\n        this.saveLocalData(newArray);\r\n        this.rewriteArrayData(newArray);\r\n        this.cleanInput();   \r\n\r\n        Notify.success('value added successfully');\r\n    }\r\n\r\n    errorValue = (value)=>{\r\n        if(value===\"\"){\r\n            Notify.failure('value = NAN');\r\n            return true  \r\n        }  \r\n        if(createLocal().findIndex(item=>item.value===value)!==-1){\r\n            Notify.failure(\"Double value\");\r\n            return true\r\n        }\r\n        return false;\r\n    }\r\n\r\n    cleanInput = ()=>{\r\n        this.setState({\r\n            inputValue: ''\r\n        })\r\n    }\r\n\r\n    hendleChange = (e)=>{\r\n        const value = e.target.value;\r\n        this.setState({\r\n                inputValue: value\r\n            })\r\n    }\r\n\r\n    rewriteArrayData = (items) =>{  \r\n        this.setState({\r\n            arrayData: items\r\n        })\r\n    }\r\n\r\n    removeArrayDataItem = (id)=>{\r\n        const newArray = createLocal().filter(item=>item.id!==id);\r\n        this.saveLocalData(newArray);\r\n        this.rewriteArrayData(newArray);\r\n    }\r\n\r\n    selectItemClick = (id)=>{\r\n        const arrayData = createLocal();\r\n        const item = arrayData.find(item => item.id === +id);\r\n        item.checked = !item.checked;\r\n        this.saveLocalData(arrayData);\r\n        this.rewriteArrayData(arrayData);\r\n    }\r\n\r\n    saveLocalData = (items)=>{\r\n        localStorage.setItem('listItems',JSON.stringify(items) )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n    <div className=\"to-do-list\">\r\n        <h3 className=\"to-do-list__title\"> to-do-list </h3>\r\n        <div className=\"to-do-list__box to-do-list__box--flex\"> \r\n            <input className='to-do-list__input'\r\n                value={this.state.inputValue}\r\n                onChange={this.hendleChange}>        \r\n            </input>\r\n            <button className='to-do-list__btn' \r\n                onClick={this.addBtnClick}>\r\n                    add item\r\n            </button>\r\n        </div>\r\n        <List \r\n            items = {this.state.arrayData} \r\n            onButtonClick = {this.removeArrayDataItem.bind(this)}\r\n            onItemClick ={this.selectItemClick.bind(this)}\r\n        />\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './components/App';\n\n// const App = <div></div>\n\n render(<App/>,document.getElementById('root'))\n\n"],"sourceRoot":""}